{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\ECG-Read Final\\\\ECGRead---Final-Product\\\\Client\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_].{2,24}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst Register = props => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    userRef.current.focus(); // Here we simply set the focus to User input.\n  }, []);\n  useEffect(() => {\n    // This is where we validate the user name.\n    const result = USER_REGEX.test(user);\n    console.log(user);\n    console.log(result);\n    setValidName(result);\n  }, [user]); // Anytime this USER input changes, it will check the validation in that field.\n\n  useEffect(() => {\n    // This is where we validate the password.\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd; // By using both pwd and matchPwd within same EFFECT hook, a change in either of them will be checked with this single hook immediately.\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd, matchPwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    //If button was however enabled with a JS hack.\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    console.log(user, pwd);\n    setSuccess(true);\n    axios.post(\"http://localhost:4000/createUser\", {\n      user,\n      pwd\n    }).then(response => {\n      console.log(response.data.status, response.data.message);\n      if (response.data.status) {\n        alert(\"New user account created, Please login.\");\n        navigate(\"/login\");\n      } else {\n        alert(response.data.message + \" Please use a new Username.\");\n      }\n    }).catch(error => {\n      // Handle registration errors\n      console.log(\"failed with \", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"register-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"topic\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field-name\",\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            style: {\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName || !user ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"typing-boxes\",\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"Enter your name\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\",\n        \"aria-describedby\": \"uidnote\" //This is where we allow the screen reader to see the Name assigning requirements.\n        ,\n        onFocus: () => {\n          console.log(\"Username field focused\");\n          setUserFocus(true);\n        } //If user is on the input field set TRUE\n        ,\n        onBlur: () => {\n          console.log(\"Username field blurred\");\n          setUserFocus(false);\n        } //Otherwise false.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), \"\\xA0 4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), \"Letters,numbers,underscores,hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field-name\",\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            style: {\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd || !pwd ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"typing-boxes\",\n        type: \"password\" // Type \"password\" will not support auto-complete anyway.\n        ,\n        id: \"password\",\n        placeholder: \"Enter new password\",\n        onChange: e => setPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validPwd ? \"false\" : \"true\",\n        \"aria-describedby\": \"pwdnote\" //This is where we allow the screen reader to see the Name assigning requirements.\n        ,\n        onFocus: () => {\n          console.log(\"Password field focused\");\n          setPwdFocus(true);\n        } //If user is on the input field set TRUE\n        ,\n        onBlur: () => {\n          console.log(\"Password field blurred\");\n          setPwdFocus(false);\n        } //Otherwise false.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), \"\\xA0 8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), \"Allowed special characters:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"exclaimation mark\",\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"at symbol\",\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"hashtag\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"dollar sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"percent\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field-name\",\n        htmlFor: \"confirm_pwd\",\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch && matchPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            style: {\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"typing-boxes\",\n        type: \"password\" // Will not support auto-complete anyway.\n        ,\n        id: \"confirm_pwd\",\n        placeholder: \"Re-enter new password\",\n        onChange: e => setMatchPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validMatch ? \"false\" : \"true\",\n        \"aria-describedby\": \"confirmnote\" //This is where we allow the screen reader to see the match password assigning requirements.\n        ,\n        onFocus: () => {\n          console.log(\"Confirm-password field focused\");\n          setMatchFocus(true);\n        } //If user is on the input field set TRUE\n        ,\n        onBlur: () => {\n          console.log(\"Confirm-password field blurred\");\n          setMatchFocus(false);\n        } //Otherwise false.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"confirmnote\",\n        className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), \"\\xA0 Must match the first password input field.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !validName || !validPwd || !validMatch ? true : false,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sign-in-link\",\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"link-btn\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"6ldRbyNY/gZxAxIjjP/BD1I3B4Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Link","useNavigate","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Register","props","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","navigate","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","v1","v2","post","then","response","data","status","message","alert","catch","error","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","icon","style","color","type","id","placeholder","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","to","_c","$RefreshReg$"],"sources":["E:/My Projects/ECG-Read Final/ECGRead---Final-Product/Client/src/Register.js"],"sourcesContent":["import \"./App.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\n\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_].{2,24}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\nconst Register = (props) => {\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [validName, setValidName] = useState(false);\r\n  const [userFocus, setUserFocus] = useState(false);\r\n\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [validPwd, setValidPwd] = useState(false);\r\n  const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n  const [matchPwd, setMatchPwd] = useState(\"\");\r\n  const [validMatch, setValidMatch] = useState(false);\r\n  const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    userRef.current.focus(); // Here we simply set the focus to User input.\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // This is where we validate the user name.\r\n    const result = USER_REGEX.test(user);\r\n    console.log(user);\r\n    console.log(result);\r\n    setValidName(result);\r\n  }, [user]); // Anytime this USER input changes, it will check the validation in that field.\r\n\r\n  useEffect(() => {\r\n    // This is where we validate the password.\r\n    const result = PWD_REGEX.test(pwd);\r\n    console.log(result);\r\n    console.log(pwd);\r\n    setValidPwd(result);\r\n    const match = pwd === matchPwd; // By using both pwd and matchPwd within same EFFECT hook, a change in either of them will be checked with this single hook immediately.\r\n    setValidMatch(match);\r\n  }, [pwd, matchPwd]);\r\n\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd, matchPwd]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //If button was however enabled with a JS hack.\r\n    const v1 = USER_REGEX.test(user);\r\n    const v2 = PWD_REGEX.test(pwd);\r\n    if (!v1 || !v2) {\r\n      setErrMsg(\"Invalid Entry\");\r\n      return;\r\n    }\r\n    console.log(user, pwd);\r\n    setSuccess(true);\r\n    axios\r\n      .post(\"http://localhost:4000/createUser\", { user, pwd })\r\n      .then((response) => {\r\n        console.log(response.data.status, response.data.message);\r\n        if (response.data.status) {\r\n          alert(\"New user account created, Please login.\");\r\n          navigate(\"/login\");\r\n        } else {\r\n          alert(response.data.message + \" Please use a new Username.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Handle registration errors\r\n        console.log(\"failed with \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"register-page\">\r\n      <p\r\n        ref={errRef}\r\n        className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n        aria-live=\"assertive\"\r\n      >\r\n        {errMsg}\r\n      </p>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <h1 className=\"topic\">Register</h1>\r\n        <label className=\"field-name\" htmlFor=\"username\">\r\n          Username:\r\n          <span className={validName ? \"valid\" : \"hide\"}>\r\n            <FontAwesomeIcon\r\n              icon={faCheck}\r\n              style={{\r\n                color: \"green\",\r\n              }}\r\n            />\r\n          </span>\r\n          <span className={validName || !user ? \"hide\" : \"invalid\"}>\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              style={{\r\n                color: \"red\",\r\n              }}\r\n            />\r\n          </span>\r\n        </label>\r\n        <input\r\n          className=\"typing-boxes\"\r\n          type=\"text\"\r\n          id=\"username\"\r\n          placeholder=\"Enter your name\"\r\n          ref={userRef}\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setUser(e.target.value)}\r\n          required\r\n          aria-invalid={validName ? \"false\" : \"true\"}\r\n          aria-describedby=\"uidnote\" //This is where we allow the screen reader to see the Name assigning requirements.\r\n          onFocus={() => {\r\n            console.log(\"Username field focused\");\r\n            setUserFocus(true);\r\n          }} //If user is on the input field set TRUE\r\n          onBlur={() => {\r\n            console.log(\"Username field blurred\");\r\n            setUserFocus(false);\r\n          }} //Otherwise false.\r\n        />\r\n\r\n        <p\r\n          id=\"uidnote\"\r\n          className={\r\n            userFocus && user && !validName ? \"instructions\" : \"offscreen\"\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          &nbsp; 4 to 24 characters.\r\n          <br />\r\n          Must begin with a letter.\r\n          <br />\r\n          Letters,numbers,underscores,hyphens allowed.\r\n        </p>\r\n\r\n        <label className=\"field-name\" htmlFor=\"password\">\r\n          Password:\r\n          <span className={validPwd ? \"valid\" : \"hide\"}>\r\n            <FontAwesomeIcon\r\n              icon={faCheck}\r\n              style={{\r\n                color: \"green\",\r\n              }}\r\n            />\r\n          </span>\r\n          <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              style={{\r\n                color: \"red\",\r\n              }}\r\n            />\r\n          </span>\r\n        </label>\r\n        <input\r\n          className=\"typing-boxes\"\r\n          type=\"password\" // Type \"password\" will not support auto-complete anyway.\r\n          id=\"password\"\r\n          placeholder=\"Enter new password\"\r\n          onChange={(e) => setPwd(e.target.value)}\r\n          required\r\n          aria-invalid={validPwd ? \"false\" : \"true\"}\r\n          aria-describedby=\"pwdnote\" //This is where we allow the screen reader to see the Name assigning requirements.\r\n          onFocus={() => {\r\n            console.log(\"Password field focused\");\r\n            setPwdFocus(true);\r\n          }} //If user is on the input field set TRUE\r\n          onBlur={() => {\r\n            console.log(\"Password field blurred\");\r\n            setPwdFocus(false);\r\n          }} //Otherwise false.\r\n        />\r\n        <p\r\n          id=\"pwdnote\"\r\n          className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\r\n        >\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          &nbsp; 8 to 24 characters.\r\n          <br />\r\n          Must include uppercase and lowercase letters, a number and a special\r\n          character.\r\n          <br />\r\n          Allowed special characters:\r\n          <span aria-label=\"exclaimation mark\">!</span>\r\n          <span aria-label=\"at symbol\">@</span>\r\n          <span aria-label=\"hashtag\">#</span>\r\n          <span aria-label=\"dollar sign\">$</span>\r\n          <span aria-label=\"percent\">%</span>\r\n        </p>\r\n\r\n        <label className=\"field-name\" htmlFor=\"confirm_pwd\">\r\n          Confirm Password:\r\n          <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\r\n            <FontAwesomeIcon\r\n              icon={faCheck}\r\n              style={{\r\n                color: \"green\",\r\n              }}\r\n            />\r\n          </span>\r\n          <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              style={{\r\n                color: \"red\",\r\n              }}\r\n            />\r\n          </span>\r\n        </label>\r\n        <input\r\n          className=\"typing-boxes\"\r\n          type=\"password\" // Will not support auto-complete anyway.\r\n          id=\"confirm_pwd\"\r\n          placeholder=\"Re-enter new password\"\r\n          onChange={(e) => setMatchPwd(e.target.value)}\r\n          required\r\n          aria-invalid={validMatch ? \"false\" : \"true\"}\r\n          aria-describedby=\"confirmnote\" //This is where we allow the screen reader to see the match password assigning requirements.\r\n          onFocus={() => {\r\n            console.log(\"Confirm-password field focused\");\r\n            setMatchFocus(true);\r\n          }} //If user is on the input field set TRUE\r\n          onBlur={() => {\r\n            console.log(\"Confirm-password field blurred\");\r\n            setMatchFocus(false);\r\n          }} //Otherwise false.\r\n        />\r\n        <p\r\n          id=\"confirmnote\"\r\n          className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}\r\n        >\r\n          <FontAwesomeIcon icon={faInfoCircle} />\r\n          &nbsp; Must match the first password input field.\r\n        </p>\r\n\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={!validName || !validPwd || !validMatch ? true : false}\r\n        >\r\n          Sign Up\r\n        </button>\r\n\r\n        <p className=\"sign-in-link\">\r\n          Already registered?\r\n          <br />\r\n          <span className=\"line\">\r\n            <Link to=\"/login\" className=\"link-btn\">\r\n              Log In\r\n            </Link>\r\n          </span>\r\n        </p>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}