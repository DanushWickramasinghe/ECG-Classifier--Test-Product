{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\ECG-Read Final\\\\ECGRead---Final-Product\\\\Front-end\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const userRef = useRef();\n  const errRef = useRef();\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus(); // Here we simply set the focus to User input.\n  }, []);\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //If button enabled with JS hack\n    // const v1 = USER_REGEX.test(user);\n    // const v2 = PWD_REGEX.test(pwd);\n\n    // Here we have to check with the database if there is such a matching username and a password.\n    // if (!v1 || !v2) {\n    //   setErrMsg(\"Invalid Entry\");\n    //   return;\n    // }\n    // console.log(user, pwd);\n    // setSuccess(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"topic\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field-name\",\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"typing-boxes\",\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"Enter the Username\",\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field-name\",\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"typing-boxes\",\n        type: \"password\" // Type \"password\" will not support auto-complete anyway.\n        ,\n        id: \"password\",\n        placeholder: \"Enter your password\",\n        onChange: e => setPwd(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"hisuh71sczjfQqjTtKx0vafvjYw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useEffect","jsxDEV","_jsxDEV","Login","_s","user","setUser","pwd","setPwd","userRef","errRef","errMsg","setErrMsg","success","setSuccess","current","focus","handleSubmit","e","preventDefault","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","autoComplete","onChange","target","value","required","_c","$RefreshReg$"],"sources":["E:/My Projects/ECG-Read Final/ECGRead---Final-Product/Front-end/src/Login.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\n\r\nconst Login = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    userRef.current.focus(); // Here we simply set the focus to User input.\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setErrMsg(\"\");\r\n  }, [user, pwd]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //If button enabled with JS hack\r\n    // const v1 = USER_REGEX.test(user);\r\n    // const v2 = PWD_REGEX.test(pwd);\r\n\r\n    // Here we have to check with the database if there is such a matching username and a password.\r\n    // if (!v1 || !v2) {\r\n    //   setErrMsg(\"Invalid Entry\");\r\n    //   return;\r\n    // }\r\n    // console.log(user, pwd);\r\n    // setSuccess(true);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <p\r\n        ref={errRef}\r\n        className={errMsg ? \"errmsg\" : \"offscreen\"}\r\n        aria-live=\"assertive\"\r\n      >\r\n        {errMsg}\r\n      </p>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <h1 className=\"topic\">Login</h1>\r\n        <label className=\"field-name\" htmlFor=\"username\">\r\n          Username:\r\n        </label>\r\n        <input\r\n          className=\"typing-boxes\"\r\n          type=\"text\"\r\n          id=\"username\"\r\n          placeholder=\"Enter the Username\"\r\n          ref={userRef}\r\n          autoComplete=\"off\"\r\n          onChange={(e) => setUser(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label className=\"field-name\" htmlFor=\"password\">\r\n          Password:\r\n        </label>\r\n        <input\r\n          className=\"typing-boxes\"\r\n          type=\"password\" // Type \"password\" will not support auto-complete anyway.\r\n          id=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          onChange={(e) => setPwd(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button className=\"submit-button\">Log In</button>\r\n        {/* <p className=\"sign-up-link\">\r\n          Did not register yet?\r\n          <br />\r\n          <span className=\"line\">\r\n            <a className=\"link-btn\" href=\"#\" onClick={props.onFormSwitch}>\r\n              Register\r\n            </a>\r\n          </span>\r\n        </p> */}\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}