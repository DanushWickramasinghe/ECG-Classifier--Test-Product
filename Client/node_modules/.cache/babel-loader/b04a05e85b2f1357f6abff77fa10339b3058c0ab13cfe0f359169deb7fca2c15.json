{"ast":null,"code":"var _jsxFileName = \"E:\\\\My Projects\\\\ECG-Read Final\\\\ECGRead---Final-Product\\\\Front-end\\\\src\\\\Fileupload.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FileUploader = ({\n  handleFile\n}) => {\n  _s();\n  // Create a reference to the hidden file input element\n  const hiddenFileInput = useRef(null);\n\n  // Programatically click the hidden file input element\n  // when the Button component is clicked\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n  // Call a function (passed as a prop from the parent component)\n  // to handle the user-selected file\n  const handleChange = event => {\n    const fileUploaded = event.target.files[0];\n    handleFile(fileUploaded);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-upload\",\n      onClick: handleClick,\n      children: \"Upload a file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange,\n      ref: hiddenFileInput,\n      style: {\n        display: \"none\"\n      } // Make the file input element invisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUploader, \"EpolC80A24S/ni3G/l+QA6cqIpY=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","handleFile","_s","hiddenFileInput","handleClick","event","current","click","handleChange","fileUploaded","target","files","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","ref","style","display","_c","$RefreshReg$"],"sources":["E:/My Projects/ECG-Read Final/ECGRead---Final-Product/Front-end/src/Fileupload.js"],"sourcesContent":["import { useRef } from \"react\";\r\nimport \"./App.css\";\r\nexport const FileUploader = ({ handleFile }) => {\r\n  // Create a reference to the hidden file input element\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  // Programatically click the hidden file input element\r\n  // when the Button component is clicked\r\n  const handleClick = (event) => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n  // Call a function (passed as a prop from the parent component)\r\n  // to handle the user-selected file\r\n  const handleChange = (event) => {\r\n    const fileUploaded = event.target.files[0];\r\n    handleFile(fileUploaded);\r\n  };\r\n  return (\r\n    <>\r\n      <button className=\"button-upload\" onClick={handleClick}>\r\n        Upload a file\r\n      </button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }} // Make the file input element invisible\r\n      />\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnB,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAMC,eAAe,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAEpC;EACA;EACA,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7BF,eAAe,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;EACjC,CAAC;EACD;EACA;EACA,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9B,MAAMI,YAAY,GAAGJ,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1CV,UAAU,CAACQ,YAAY,CAAC;EAC1B,CAAC;EACD,oBACEZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAQgB,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEV,WAAY;MAAAQ,QAAA,EAAC;IAExD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEZ,YAAa;MACvBa,GAAG,EAAElB,eAAgB;MACrBmB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE,CAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAChB,EAAA,CA5BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}